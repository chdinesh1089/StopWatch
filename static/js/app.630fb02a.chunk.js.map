{"version":3,"sources":["styles.js","buttons.js","time.js","App.js"],"names":["styles","StyleSheet","create","container","flex","backgroundColor","alignItems","title","color","fontSize","marginTop","alignSelf","time_display","margin","buttons","borderColor","borderWidth","borderRadius","marginBottom","width","buttonsContainer","flexDirection","lap","lapsDivider","marginVertical","borderBottomColor","borderBottomWidth","hairlineWidth","StartStopButton","started","startTimer","pauseTimer","View","style","Button","onPress","ResetLapsButton","addLap","reset","msToTime","timeInMS","Date","parseInt","toISOString","slice","TimeDisplay","timeElapsed","console","log","Text","timerId","undefined","Container","useState","setTimeElapsed","getLaps","setLaps","setStarted","timeAtStart","getTime","setInterval","timeNow","clearInterval","laps","push","LapsDisplay","lapsData","map","key","warn","lapsExist","length","FlatList","data","renderItem","item","App","StatusBar"],"mappings":"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","file":"static/js/app.630fb02a.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        //justifyContent: 'flex-top',\n    },\n    title: {\n        color: '#696969',\n        fontSize: 54,\n        marginTop: 10,\n        alignSelf: 'center',\n    },\n    time_display: {\n        color: '#8b8589',\n        fontSize: 31,\n        margin: 20,\n        alignSelf: 'center',\n      },\n    buttons: {\n        borderColor: '#696969',\n        borderWidth: 5,\n        borderRadius: 6,\n        margin: 3,\n        marginTop: 0,\n        marginBottom: 6,\n        width: 100,\n    },\n    buttonsContainer: {\n        flexDirection: 'row',\n    },\n    lap: {\n        margin: 3,\n        fontSize: 19,\n        color: '#8b8589',\n        alignSelf: 'center',\n    },\n    lapsDivider: {\n        marginVertical: 8,\n        borderBottomColor: '#696969',\n        borderBottomWidth: StyleSheet.hairlineWidth,\n    }\n})\n","import React, {useState} from 'react';\nimport { Button, View } from 'react-native';\nimport { styles } from './styles';\n\nexport function StartStopButton({started, startTimer, pauseTimer}) {\n    return (\n        <View style={styles.buttons}>\n            <Button color=\"#808080\"\n                onPress={started?pauseTimer:startTimer}\n                title={started?\"Pause\":\"Start\"}\n            />\n        </View>\n    )\n}\n\nexport function ResetLapsButton({started, addLap, reset}) {\n    return (\n        <View style={styles.buttons}>\n            <Button color=\"#808080\"\n                onPress={started?addLap:reset}\n                title={started?\"Lap\":\"Reset\"}\n            />\n        </View>\n\n    )\n}\n","import React, {useState} from 'react';\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\nimport { FlatList, Text, View } from 'react-native';\nimport { ResetLapsButton, StartStopButton } from './buttons';\nimport { styles } from './styles';\n\n\nfunction msToTime(timeInMS) {\n    //return typeof(timeInMS);\n    return new Date(parseInt(timeInMS, 10)).toISOString().slice(11, -2)\n}\n\nfunction TimeDisplay({timeElapsed}) {\n    console.log(timeElapsed);\n    return (\n      <Text style={styles.time_display}>\n        {msToTime(timeElapsed)}\n      </Text>\n    )\n}\n\nlet timerId = undefined;\n\nexport function Container() {\n    const [timeElapsed, setTimeElapsed] = useState(msToTime(0));\n    const [getLaps, setLaps] = useState([]);\n    const [started, setStarted] = useState(false);\n    \n    function startTimer() {\n        if(!started) {\n            const timeAtStart = new Date().getTime();\n            timerId = setInterval(()=>{\n                const timeNow = new Date().getTime();\n                setTimeElapsed(parseInt(timeElapsed, 10)+(timeNow-timeAtStart));\n            });\n            setStarted(true);\n        }\n    }\n    \n    function pauseTimer() {\n        clearInterval(timerId);\n        setStarted(false);\n    }\n    \n    function reset() {\n        clearInterval(timerId);\n        setTimeElapsed(0);\n        setLaps([]);\n        setStarted(false);\n    }\n    \n    function addLap() {\n        let laps = getLaps;\n        laps.push(msToTime(timeElapsed));\n        setLaps(laps);\n    }\n\n    return (\n        <View>\n            <TimeDisplay timeElapsed={timeElapsed} />\n            <View style={styles.buttonsContainer}>\n                <StartStopButton started={started} startTimer={startTimer} pauseTimer={pauseTimer}/>\n                <ResetLapsButton started={started} addLap={addLap} reset={reset} />\n            </View>\n            <LapsDisplay getLaps={getLaps} />\n        </View>\n    );\n}\n\nfunction LapsDisplay({getLaps}) {\n    const lapsData = getLaps.map((lap)=>{return {key: lap}});\n    console.warn(lapsData)\n    const lapsExist = lapsData.length !== 0\n\n    return (\n        <View>\n            <View style={lapsExist?styles.lapsDivider:''}/>\n            <FlatList \n                data={lapsData}\n                renderItem={({item})=><Text style={styles.lap}>{item.key}</Text>}\n            />\n        </View>\n    )\n}\n\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Text, View } from 'react-native';\nimport { Container} from './time';\nimport { styles } from './styles';\n\n\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Stop Watch</Text>\n      <Container />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n"],"sourceRoot":""}